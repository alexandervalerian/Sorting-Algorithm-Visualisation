{"version":3,"sources":["Menu.js","Slider.js","ItemBlock.js","Algorithms.js","App.js","serviceWorker.js","index.js"],"names":["SimpleMenu","props","React","useState","anchorEl","setAnchorEl","handleClose","value","changeAlgorithm","Button","startIcon","Icon","className","style","fontSize","aria-controls","aria-haspopup","onClick","event","currentTarget","variant","color","width","algorithm","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","useStyles","makeStyles","root","input","InputSlider","classes","setValue","Typography","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","disabled","onChange","newValue","aria-labelledby","onChangeCommitted","changeArrSize","Number","Input","margin","target","onBlur","inputProps","step","min","max","type","itemBlock","height","itemHeight","itemWidth","backgroundColor","blockColor","bubbleSort","arr","isSorted","j","i","length","setItemStatus","swapItems","queueAnimation","call","this","counter","bubbleSortWrapper","selectionSort","minIndex","minimum","selectionSortWrapper","insertionSort","insertionSortWrapper","quickSort","left","right","index","partition","quickSortWrapper","stateArr","JSON","parse","stringify","map","status","mergeSort","leftHalf","splice","Math","floor","rightHalf","merge","mergeSortWrapper","defaultItems","analyzedItems","sortedItems","firstItemIndex","secondItemIndex","tmp","sortedArray","shift","animateArraySorting","unsortedArr","findMinimumIndex","updatedArray","setTimeout","setState","isSorting","state","speed","pivot","App","size","randomHeight","random","push","Item","handleClick","highestTimeoutId","clearTimeout","sort","a","b","itemCount","window","innerWidth","itemBlocks","itemStatus","setColor","ItemBlock","key","display","flex","justifyContent","Component","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sTA8DeA,EAxDI,SAASC,GAAQ,IAAD,EACDC,IAAMC,SAAS,MADd,mBAC1BC,EAD0B,KAChBC,EADgB,KAO3BC,EAAc,SAAAC,GACE,iBAATA,GACTN,EAAMO,gBAAgBD,GAExBF,EAAY,OAGd,OACE,6BACE,kBAACI,EAAA,EAAD,CACEC,UACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,cAAcC,MAAO,CAAEC,SAAU,UAEnDC,gBAAc,cACdC,gBAAc,OACdC,QAnBc,SAAAC,GAClBb,EAAYa,EAAMC,gBAmBdC,QAAQ,YACRC,MAAM,UACNR,MAAO,CAAES,MAAO,UAEfrB,EAAMsB,WAAa,oBAEtB,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHrB,SAAUA,EACVsB,aAAW,EACXC,KAAMC,QAAQxB,GACdyB,QAASvB,GAET,kBAACwB,EAAA,EAAD,CAAUb,QAAS,kBAAMX,EAAY,iBAArC,eAGA,kBAACwB,EAAA,EAAD,CAAUb,QAAS,kBAAMX,EAAY,oBAArC,kBAGA,kBAACwB,EAAA,EAAD,CAAUb,QAAS,kBAAMX,EAAY,oBAArC,kBAGA,kBAACwB,EAAA,EAAD,CAAUb,QAAS,kBAAMX,EAAY,gBAArC,cAGA,kBAACwB,EAAA,EAAD,CAAUb,QAAS,kBAAMX,EAAY,gBAArC,iB,wCC/CFyB,EAAYC,YAAW,CAC3BC,KAAM,CACJX,MAAO,KAETY,MAAO,CACLZ,MAAO,MAoEIa,MAhEf,SAAqBlC,GACnB,IAAMmC,EAAUL,IADU,EAEA7B,IAAMC,SAAS,IAFf,mBAEnBI,EAFmB,KAEZ8B,EAFY,KA2B1B,OACE,yBAAKzB,UAAWwB,EAAQH,MACtB,kBAACK,EAAA,EAAD,CAAYb,GAAG,eAAec,cAAY,GAA1C,cAGA,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UACrC,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CACEC,SAAU9C,EAAM8C,SAChBxC,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CyC,SAjCiB,SAAC9B,EAAO+B,GACjCZ,EAASY,IAiCDC,kBAAgB,eAChBC,kBA1BiB,SAACjC,EAAOX,GACjCN,EAAMmD,cAAcC,OAAO9C,QA4BvB,kBAACiC,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACU,EAAA,EAAD,CACEP,SAAU9C,EAAM8C,SAChBnC,UAAWwB,EAAQF,MACnB3B,MAAOA,EACPgD,OAAO,QACPP,SAxCgB,SAAA9B,GACxBmB,EAAgC,KAAvBnB,EAAMsC,OAAOjD,MAAe,GAAK8C,OAAOnC,EAAMsC,OAAOjD,QAC9DN,EAAMmD,cAAcC,OAAOnC,EAAMsC,OAAOjD,SAuChCkD,OAhCS,WACblD,EAAQ,GACV8B,EAAS,GACTpC,EAAMmD,cAAc,IACX7C,EAAQ,MACjB8B,EAAS,KACTpC,EAAMmD,cAAc,OA2BdM,WAAY,CACVC,KAAM,GACNC,IAAK,EACLC,IAAK,IACLC,KAAM,SACN,kBAAmB,sBCxDlBC,EAbG,SAAS9D,GACzB,OACE,yBACEY,MAAO,CACL0C,OAAQ,UACRS,OAAQ/D,EAAMgE,WACd3C,MAAOrB,EAAMiE,UACbC,gBAAiBlE,EAAMmE,e,QCTzB7C,EAAY,CAChB8C,WAAY,SAAUC,GAGpB,IAFA,IAAIC,GAAW,EACXC,EAAI,GACAD,GAAU,CAChBA,GAAW,EACX,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAII,OAASF,EAAI,EAAGC,IACtCE,EAAcL,EAAK,GAAI,CAACG,EAAGA,EAAI,IAC3BH,EAAIG,GAAGT,OAASM,EAAIG,EAAI,GAAGT,SAC7BY,EAAUN,EAAKG,EAAGA,EAAI,GACtBF,GAAW,GAEbM,EAAeC,KAAKC,KAAMT,GAC1BK,EAAcL,EAAK,CAACG,EAAGA,EAAI,GAAI,IAC/BI,EAAeC,KAAKC,KAAMT,GAC1B/C,EAAUyD,SAAW,EAEvBL,EAAcL,EAAK,GAAI,GAAI,CAACA,EAAII,OAASF,EAAI,IAC7CA,IAEFG,EAAcL,EAAK,GAAI,GAAI,IAAI,GAC/BO,EAAeC,KAAKC,KAAMT,GAAK,IAEjCW,kBAAmB,SAAUX,GAC3B/C,EAAU8C,WAAWS,KAAKC,KAAMT,GAChC/C,EAAUyD,QAAU,GAEtBE,cAAe,SAAUZ,GAEvB,IADA,IAAIE,EAAI,EACDA,EAAIF,EAAII,QAAQ,CAErB,IADA,IAAIS,EAAWX,EACNC,EAAID,EAAGY,EAAUd,EAAIa,GAAUnB,OAAQS,EAAIH,EAAII,OAAQD,IAC9DE,EAAcL,EAAK,CAACG,EAAI,GAAI,CAACA,EAAGU,IAChCN,EAAeC,KAAKC,KAAMT,GACtBA,EAAIG,GAAGT,OAASoB,IAClBA,EAAUd,EAAIG,GAAGT,OACjBW,EAAcL,EAAK,CAACa,IACpBA,EAAWV,GAGXU,GAAYX,GACdI,EAAUN,EAAKE,EAAGW,GAEpBR,EAAcL,EAAK,CAACE,EAAGF,EAAII,OAAS,GAAI,GAAI,CAACF,IAC7CA,IAEFG,EAAcL,EAAK,GAAI,GAAI,IAAI,GAC/BO,EAAeC,KAAKC,KAAMT,GAAK,IAEjCe,qBAAsB,SAAUf,GAC9B/C,EAAU2D,cAAcJ,KAAKC,KAAMT,GACnC/C,EAAUyD,QAAU,GAEtBM,cAAe,SAAUhB,GACvB,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC9B,IAAK,IAAID,EAAIC,EAAGD,EAAI,GAAKF,EAAIE,GAAGR,OAASM,EAAIE,EAAI,GAAGR,OAAQQ,IAC1DG,EAAcL,EAAK,GAAI,CAACE,EAAGA,EAAI,IAC/BI,EAAUN,EAAKE,EAAGA,EAAI,GACtBK,EAAeC,KAAKC,KAAMT,GAC1BK,EAAcL,EAAK,CAACE,EAAGA,EAAI,GAAI,IAC/BK,EAAeC,KAAKC,KAAMT,GAC1B/C,EAAUyD,SAAW,EAGzBL,EAAcL,EAAK,GAAI,GAAI,IAAI,GAC/BO,EAAeC,KAAKC,KAAMT,GAAK,IAEjCiB,qBAAsB,SAAUjB,GAC9B/C,EAAU+D,cAAcR,KAAKC,KAAMT,GACnC/C,EAAUyD,QAAU,GAEtBQ,UAAW,SAAUlB,EAAKmB,EAAMC,GAC9B,GAAIpB,EAAII,OAAS,EAAG,CAClB,IAAIiB,EAAQC,EAAUd,KAAKC,KAAMT,EAAKmB,EAAMC,GACxCD,EAAOE,EAAQ,GACjBpE,EAAUiE,UAAUV,KAAKC,KAAMT,EAAKmB,EAAME,EAAQ,GAEhDA,EAAQD,GACVnE,EAAUiE,UAAUV,KAAKC,KAAMT,EAAKqB,EAAOD,GAG/C,OAAOpB,GAETuB,iBAAkB,SAAUvB,EAAKmB,EAAMC,GACrCnE,EAAUuE,SAAWC,KAAKC,MAAMD,KAAKE,UAAU3B,IAC/C/C,EAAUiE,UAAUV,KAAKC,KAAMT,EAAKmB,EAAMC,GAC1CpB,EAAI4B,KAAI,SAAAtD,GAAI,OAAKA,EAAKuD,OAAS,YAC/BtB,EAAeC,KAAKC,KAAMT,GAAK,GAC/B/C,EAAUyD,QAAU,GAEtBoB,UAAW,SAAU9B,GACnB,GAAIA,EAAII,QAAU,EAChB,OAAOJ,EAET,IAAI+B,EAAW/B,EAAIgC,OAAO,EAAGC,KAAKC,MAAMlC,EAAII,OAAS,IACjD+B,EAAYnC,EAAIgC,OAAO,EAAGhC,EAAII,QAC9Be,EAAOlE,EAAU6E,UAAUtB,KAAKC,KAAMsB,GACtCX,EAAQnE,EAAU6E,UAAUtB,KAAKC,KAAM0B,GAE3C,OADAnC,EAAMoC,EAAM5B,KAAKC,KAAMU,EAAMC,IAG/BiB,iBAAkB,SAAUrC,GAC1B/C,EAAUuE,SAAWC,KAAKC,MAAMD,KAAKE,UAAU3B,IAC/C/C,EAAU6E,UAAUtB,KAAKC,KAAMT,GAC/B/C,EAAUyD,QAAU,GAEtBA,QAAS,EACTc,SAAU,IAGZ,SAASnB,EACPL,GAMA,IADC,IAJDsC,EAIA,uDAJe,GACfC,EAGA,uDAHgB,GAChBC,EAEA,uDAFc,GACdvC,EACA,wDACSE,EAAI,EAAGA,EAAImC,EAAalC,OAAQD,IACnCH,EAAIsC,EAAanC,KAAuC,WAAhCH,EAAIsC,EAAanC,IAAI0B,SAC/C7B,EAAIsC,EAAanC,IAAI0B,OAAS,WAGlC,IAAK,IAAI1B,EAAI,EAAGA,EAAIoC,EAAcnC,OAAQD,IACpCH,EAAIuC,EAAcpC,KAAwC,WAAjCH,EAAIuC,EAAcpC,IAAI0B,SACjD7B,EAAIuC,EAAcpC,IAAI0B,OAAS,YAGnC,IAAK,IAAI1B,EAAI,EAAGA,EAAIqC,EAAYpC,OAAQD,IAClCH,EAAIwC,EAAYrC,MAClBH,EAAIwC,EAAYrC,IAAI0B,OAAS,UAMjC,OAHI5B,GACFD,EAAI4B,KAAI,SAAAtD,GAAI,OAAKA,EAAKuD,OAAS,YAE1B7B,EAGT,SAASM,EAAUN,EAAKyC,EAAgBC,GACtC,IAAIC,EAAM3C,EAAIyC,GAGd,OAFAzC,EAAIyC,GAAkBzC,EAAI0C,GAC1B1C,EAAI0C,GAAmBC,EAChB3C,EAGT,SAASoC,EAAMjB,EAAMC,GACnB,IAD6C,IAAnBwB,EAAkB,uDAAJ,GACjCzB,EAAKf,OAAS,GAAKgB,EAAMhB,OAAS,GAAG,CAC1C,IAAK,IAAID,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IAE3ClD,EAAUuE,SAASrB,GAAGkB,QAAUF,EAAK,GAAGE,OACxCpE,EAAUuE,SAASrB,GAAGkB,QAAUD,EAAM,GAAGC,OAEzChB,EAAcpD,EAAUuE,SAAU,GAAI,CAACrB,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpC,IAAK,IAAIrB,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IAE3ClD,EAAUuE,SAASrB,GAAGkB,QAAUF,EAAK,GAAGE,OACxCpE,EAAUuE,SAASrB,GAAGkB,QAAUD,EAAM,GAAGC,OAEzChB,EAAcpD,EAAUuE,SAAU,CAACrB,GAAI,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCvE,EAAUyD,SAAW,EAEnBkC,EADEzB,EAAK,GAAGzB,OAAS0B,EAAM,GAAG1B,OACjB,sBAAOkD,GAAP,CAAoBzB,EAAK0B,UAEzB,sBAAOD,GAAP,CAAoBxB,EAAMyB,UAGzC,KAAO1B,EAAKf,OAAS,GAAG,CACtB,IAAK,IAAID,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IACzClD,EAAUuE,SAASrB,GAAGkB,QAAUF,EAAK,GAAGE,OAC1ChB,EAAcpD,EAAUuE,SAAU,GAAI,CAACrB,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpC,IAAK,IAAIrB,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IACzClD,EAAUuE,SAASrB,GAAGkB,QAAUF,EAAK,GAAGE,OAC1ChB,EAAcpD,EAAUuE,SAAU,CAACrB,GAAI,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCvE,EAAUyD,SAAW,EACrBkC,EAAW,sBAAOA,GAAP,CAAoBzB,EAAK0B,UAEtC,KAAOzB,EAAMhB,OAAS,GAAG,CACvB,IAAK,IAAID,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IACzClD,EAAUuE,SAASrB,GAAGkB,QAAUD,EAAM,GAAGC,OAC3ChB,EAAcpD,EAAUuE,SAAU,GAAI,CAACrB,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpC,IAAK,IAAIrB,EAAI,EAAGA,EAAIlD,EAAUuE,SAASpB,OAAQD,IACzClD,EAAUuE,SAASrB,GAAGkB,QAAUD,EAAM,GAAGC,OAC3ChB,EAAcpD,EAAUuE,SAAU,CAACrB,GAAI,IAG3CI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCvE,EAAUyD,SAAW,EACrBkC,EAAW,sBAAOA,GAAP,CAAoBxB,EAAMyB,UAOvC,OALAC,EAAoBtC,KAAKC,KAAMmC,GAC3B3F,EAAUuE,SAASpB,SAAWwC,EAAYxC,SAC5CC,EAAcpD,EAAUuE,SAAU,GAAI,GAAI,IAAI,GAC9CjB,EAAeC,KAAKC,KAAMxD,EAAUuE,UAAU,IAEzCoB,EAGT,SAASE,EAAoBF,GAE3B,IADA,IAAI9B,EASN,SAA0BiC,EAAaH,GACrC,IAAK,IAAIzC,EAAI,EAAGA,EAAI4C,EAAY3C,OAAQD,IACtC,IAAK,IAAID,EAAI,EAAGA,EAAI0C,EAAYxC,OAAQF,IACtC,GAAI6C,EAAY5C,GAAGkB,QAAUuB,EAAY1C,GAAGmB,MAC1C,OAAOlB,EAbC6C,CAAiB/F,EAAUuE,SAAUoB,GAC1CzC,EAAI,EAAGA,EAAIyC,EAAYxC,OAAQD,IACtClD,EAAUuE,SAASV,EAAUX,GAAKsB,KAAKC,MACrCD,KAAKE,UAAUiB,EAAYzC,KAE7BI,EAAeC,KAAKC,KAAMxD,EAAUuE,UAcxC,SAASjB,EAAe0C,EAAchD,GAAW,IAAD,OAC1CD,EAAMyB,KAAKC,MAAMD,KAAKE,UAAUsB,IACpCC,YAAW,WACLjD,EACF,EAAKkD,SAAS,CACZnD,IAAKA,EACLC,UAAU,EACVmD,WAAW,IAGb,EAAKD,SAAS,CACZnD,IAAKA,MAGR/C,EAAUyD,QAAUD,KAAK4C,MAAMC,OAClCrG,EAAUyD,SAAW,EAIvB,SAASY,EAAUtB,EAAKmB,EAAMC,GAI5B,IAHA,IAAImC,EAAQvD,EAAIiC,KAAKC,OAAOd,EAAQD,GAAQ,IAAIzB,OAC5CS,EAAIgB,EACJjB,EAAIkB,EACDjB,GAAKD,GAAG,CACb,KAAOF,EAAIG,GAAGT,OAAS6D,GACrBlD,EAAcpD,EAAUuE,SAAU,GAAI,CAACrB,IACvCI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCnB,EAAcpD,EAAUuE,SAAU,CAACrB,GAAI,IACvCI,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCvE,EAAUyD,SAAW,EACrBP,IAEF,KAAOH,EAAIE,GAAGR,OAAS6D,GACrBlD,EAAcpD,EAAUuE,SAAU,GAAI,CAACtB,IACvCK,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCnB,EAAcpD,EAAUuE,SAAU,CAACtB,GAAI,IACvCK,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCvE,EAAUyD,SAAW,EACrBR,IAEEC,GAAKD,IACPI,EAAUN,EAAKG,EAAGD,GAClBG,EAAcpD,EAAUuE,SAAU,GAAI,CAACrB,EAAGD,IAC1CI,EAAUrD,EAAUuE,SAAUrB,EAAGD,GACjCK,EAAeC,KAAKC,KAAMxD,EAAUuE,UACpCnB,EAAcpD,EAAUuE,SAAU,CAACrB,EAAGD,GAAI,IAC1CK,EAAeC,KAAKC,KAAMxD,EAAUuE,UAEpCrB,IACAD,KAGJ,OAAOC,EAGMlD,QCtRTuG,G,kBACJ,WAAY7H,GAAQ,IAAD,8BACjB,4CAAMA,KAcRO,gBAAkB,SAAAe,GAChB,EAAKkG,SAAS,CAAElG,UAAWA,KAhBV,EAmBnB6B,cAAgB,SAAA2E,GAEd,IADA,IA0H2BnE,EAAKC,EA1H5BS,EAAM,GACDG,EAAI,EAAGA,EAAIsD,EAAMtD,IAAK,CAC7B,IAAIuD,GAwHqBpE,EAxHgB,GAwHXC,EAxHe,IAyH1C0C,KAAK0B,UAAYpE,EAAMD,GAAOA,GAxHjCU,EAAI4D,KAAK,IAAIC,EAAKH,EAAc,UAAWvD,IAE7C,EAAKgD,SAAS,CAAEnD,IAAKA,EAAKC,UAAU,KAzBnB,EA4BnB6D,YAAc,WACZ,GAAI,EAAKT,MAAMrD,IAAII,OAAS,EAC1B,GAAK,EAAKiD,MAAMpD,UAAa,EAAKoD,MAAMD,UA0BjC,IAAK,EAAKC,MAAMpD,UAAY,EAAKoD,MAAMD,UAAW,CAGvD,IADA,IAAIW,EAAmBb,WAAW,KACzB/C,EAAI,EAAGA,EAAI4D,EAAkB5D,IACpC6D,aAAa7D,GAEf,EAAKgD,SAAS,CAAElD,UAAU,EAAMmD,WAAW,QACtC,CACL,IAAIpD,EAAMyB,KAAKC,MAAMD,KAAKE,UAAU,EAAK0B,MAAMrD,MAC/CA,EAAIiE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7C,MAAQ8C,EAAE9C,SAC/BrB,EAAI4B,KAAI,SAAAtD,GAAI,OAAKA,EAAKuD,OAAS,aAC/B,EAAKsB,SAAS,CAAEnD,IAAKA,EAAKC,UAAU,QArCa,CACjD,IAAID,EAAMyB,KAAKC,MAAMD,KAAKE,UAAU,EAAK0B,MAAMrD,MAC/C,OAAQ,EAAKqD,MAAMpG,WACjB,IAAK,cACH,EAAKkG,SAAS,CAAEC,WAAW,IAC3BnG,EAAU0D,kBAAkBH,KAA5B,eAAuCR,GACvC,MACF,IAAK,iBACH,EAAKmD,SAAS,CAAEC,WAAW,IAC3BnG,EAAU8D,qBAAqBP,KAA/B,eAA0CR,GAC1C,MACF,IAAK,iBACH,EAAKmD,SAAS,CAAEC,WAAW,IAC3BnG,EAAUgE,qBAAqBT,KAA/B,eAA0CR,GAC1C,MACF,IAAK,aACH,EAAKmD,SAAS,CAAEC,WAAW,IAC3BnG,EAAUsE,iBAAiBf,KAA3B,eAAsCR,EAAK,EAAGA,EAAII,OAAS,GAC3D,MACF,IAAK,aACH,EAAK+C,SAAS,CAAEC,WAAW,IAC3BnG,EAAUoF,iBAAiB7B,KAA3B,eAAsCR,MAjD9C,EAAKqD,MAAQ,CACXrD,IAAK,GACL/C,UAAW,GACXqG,MAAO,GACPrD,UAAU,EACVmD,WAAW,GAPI,E,iFAYjB3C,KAAK3B,cAAc,M,+BA4DX,IA0EWsF,EA1EZ,EACkB3D,KAAK4C,MAAxBrD,EADC,EACDA,IAAK/C,EADJ,EACIA,UACL2C,GAwEawE,EAxEapE,EAAII,OAyE/BiE,OAAOC,WAAaF,EAAY,GAxEjCG,EAAavE,EAAI4B,KAAI,SAACtD,EAAM+C,GAC9B,IAAIvB,EA0EV,SAAkB0E,GAChB,OAAQA,GACN,IAAK,WACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,QACE,MAAO,WAjFUC,CAASnG,EAAKuD,QAC/B,OACE,kBAAC6C,EAAD,CACEC,IAAKtD,EACLzB,UAAWA,EACXD,WAAYrB,EAAKoB,OACjBI,WAAYA,OAIlB,OACE,6BACE,4BACEvD,MAAO,CACLqI,QAAS,OACTvG,WAAY,WAGd,yBAAK9B,MAAO,CAAEqI,QAAS,OAAQC,KAAM,EAAGC,eAAgB,WACtD,kBAAC,EAAD,CACE5I,gBAAiBuE,KAAKvE,gBACtBe,UAAWA,KAGf,yBAAKV,MAAO,CAAEqI,QAAS,OAAQC,KAAM,EAAGC,eAAgB,WACtD,kBAAC,EAAD,CACErG,SAAUgC,KAAK4C,MAAMD,UACrBtE,cAAe2B,KAAK3B,iBAGxB,yBAAKvC,MAAO,CAAEqI,QAAS,OAAQC,KAAM,EAAGC,eAAgB,WACtD,kBAAC3I,EAAA,EAAD,CACEC,UACEqE,KAAK4C,MAAMD,UACN,kBAAC/G,EAAA,EAAD,CAAMC,UAAU,cAAcC,MAAO,CAAEC,SAAU,UAClDiE,KAAK4C,MAAMpD,SACR,kBAAC5D,EAAA,EAAD,CAAMC,UAAU,cAAcC,MAAO,CAAEC,SAAU,UACjD,kBAACH,EAAA,EAAD,CAAMC,UAAU,wBAAwBC,MAAO,CAAEC,SAAU,UAEpEM,QAAQ,YACRC,MAAM,UACNJ,QAAS8D,KAAKqD,YACdvH,MAAO,CAAES,MAAO,UAEfyD,KAAK4C,MAAMD,UACR,OACA3C,KAAK4C,MAAMpD,SACT,QACA,UAIZ,yBAAK1D,MAAO,CAAEqI,QAAS,SAAWL,Q,GAjIxB3I,IAAMmJ,YAuIlBlB,EACJ,WAAYnE,EAAQmC,EAAQR,GAAQ,oBAClCZ,KAAKf,OAASA,EACde,KAAKoB,OAASA,EACdpB,KAAKY,MAAQA,GAuBFmC,QC/JTwB,EAAc1H,QACW,cAA7B+G,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxC,QACfkC,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OAAO,kBAAE,EAAF,MAAUC,SAASC,eAAe,SDgB3C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,qBAAwBvC,OAAOY,SAAS4B,MACpDC,SAAWzC,OAAOY,SAAS6B,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,qBAAN,sBAEP5B,IAgEV,SAAiCK,EAAOC,GAEtC0B,MAAM3B,GACHK,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASpF,QACO,MAAfqF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BrB,OAAOY,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAuB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.b7891548.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst SimpleMenu = function(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = value => {\n    if (typeof value == \"string\") {\n      props.changeAlgorithm(value);\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        startIcon={\n          <Icon className=\"fas fa-bars\" style={{ fontSize: \"16px\" }} />\n        }\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ width: \"220px\" }}\n      >\n        {props.algorithm || \"Choose Algorithm\"}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => handleClose(\"Bubble Sort\")}>\n          Bubble Sort\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"Selection Sort\")}>\n          Selection Sort\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"Insertion Sort\")}>\n          Insertion Sort\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"Quick Sort\")}>\n          Quick Sort\n        </MenuItem>\n        <MenuItem onClick={() => handleClose(\"Merge Sort\")}>\n          Merge sort\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default SimpleMenu;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Input from \"@material-ui/core/Input\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250\n  },\n  input: {\n    width: 42\n  }\n});\n\nfunction InputSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(30);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = event => {\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n    props.changeArrSize(Number(event.target.value));\n  };\n\n  const handleSliderCommit = (event, value) => {\n    props.changeArrSize(Number(value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n      props.changeArrSize(0);\n    } else if (value > 100) {\n      setValue(100);\n      props.changeArrSize(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"input-slider\" gutterBottom>\n        Array size\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            disabled={props.disabled}\n            value={typeof value === \"number\" ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n            onChangeCommitted={handleSliderCommit}\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            disabled={props.disabled}\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 10,\n              min: 0,\n              max: 100,\n              type: \"number\",\n              \"aria-labelledby\": \"input-slider\"\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default InputSlider;\n","import React from \"react\";\n\nconst itemBlock = function(props) {\n  return (\n    <div\n      style={{\n        margin: \"0px 2px\",\n        height: props.itemHeight,\n        width: props.itemWidth,\n        backgroundColor: props.blockColor\n      }}\n    ></div>\n  );\n};\n\nexport default itemBlock;\n","const algorithm = {\n  bubbleSort: function (arr) {\n    let isSorted = false;\n    let j = 0;\n    while (!isSorted) {\n      isSorted = true;\n      for (let i = 0; i < arr.length - j - 1; i++) {\n        setItemStatus(arr, [], [i, i + 1]);\n        if (arr[i].height > arr[i + 1].height) {\n          swapItems(arr, i, i + 1);\n          isSorted = false;\n        }\n        queueAnimation.call(this, arr);\n        setItemStatus(arr, [i, i + 1], []);\n        queueAnimation.call(this, arr);\n        algorithm.counter -= 1;\n      }\n      setItemStatus(arr, [], [], [arr.length - j - 1]);\n      j++;\n    }\n    setItemStatus(arr, [], [], [], true);\n    queueAnimation.call(this, arr, true);\n  },\n  bubbleSortWrapper: function (arr) {\n    algorithm.bubbleSort.call(this, arr);\n    algorithm.counter = 1;\n  },\n  selectionSort: function (arr) {\n    let j = 0;\n    while (j < arr.length) {\n      let minIndex = j;\n      for (let i = j, minimum = arr[minIndex].height; i < arr.length; i++) {\n        setItemStatus(arr, [i - 1], [i, minIndex]);\n        queueAnimation.call(this, arr);\n        if (arr[i].height < minimum) {\n          minimum = arr[i].height;\n          setItemStatus(arr, [minIndex]);\n          minIndex = i;\n        }\n      }\n      if (minIndex != j) {\n        swapItems(arr, j, minIndex);\n      }\n      setItemStatus(arr, [j, arr.length - 1], [], [j]);\n      j++;\n    }\n    setItemStatus(arr, [], [], [], true);\n    queueAnimation.call(this, arr, true);\n  },\n  selectionSortWrapper: function (arr) {\n    algorithm.selectionSort.call(this, arr);\n    algorithm.counter = 1;\n  },\n  insertionSort: function (arr) {\n    for (let i = 1; i < arr.length; i++) {\n      for (let j = i; j > 0 && arr[j].height < arr[j - 1].height; j--) {\n        setItemStatus(arr, [], [j, j - 1]);\n        swapItems(arr, j, j - 1);\n        queueAnimation.call(this, arr);\n        setItemStatus(arr, [j, j - 1], []);\n        queueAnimation.call(this, arr);\n        algorithm.counter -= 1;\n      }\n    }\n    setItemStatus(arr, [], [], [], true);\n    queueAnimation.call(this, arr, true);\n  },\n  insertionSortWrapper: function (arr) {\n    algorithm.insertionSort.call(this, arr);\n    algorithm.counter = 1;\n  },\n  quickSort: function (arr, left, right) {\n    if (arr.length > 1) {\n      let index = partition.call(this, arr, left, right);\n      if (left < index - 1) {\n        algorithm.quickSort.call(this, arr, left, index - 1);\n      }\n      if (index < right) {\n        algorithm.quickSort.call(this, arr, index, right);\n      }\n    }\n    return arr;\n  },\n  quickSortWrapper: function (arr, left, right) {\n    algorithm.stateArr = JSON.parse(JSON.stringify(arr));\n    algorithm.quickSort.call(this, arr, left, right);\n    arr.map(item => (item.status = \"sorted\"));\n    queueAnimation.call(this, arr, true);\n    algorithm.counter = 1;\n  },\n  mergeSort: function (arr) {\n    if (arr.length <= 1) {\n      return arr;\n    }\n    let leftHalf = arr.splice(0, Math.floor(arr.length / 2));\n    let rightHalf = arr.splice(0, arr.length);\n    let left = algorithm.mergeSort.call(this, leftHalf);\n    let right = algorithm.mergeSort.call(this, rightHalf);\n    arr = merge.call(this, left, right);\n    return arr;\n  },\n  mergeSortWrapper: function (arr) {\n    algorithm.stateArr = JSON.parse(JSON.stringify(arr));\n    algorithm.mergeSort.call(this, arr);\n    algorithm.counter = 1;\n  },\n  counter: 1,\n  stateArr: []\n};\n\nfunction setItemStatus(\n  arr,\n  defaultItems = [],\n  analyzedItems = [],\n  sortedItems = [],\n  isSorted = false\n) {\n  for (let i = 0; i < defaultItems.length; i++) {\n    if (arr[defaultItems[i]] && arr[defaultItems[i]].status !== \"sorted\") {\n      arr[defaultItems[i]].status = \"default\";\n    }\n  }\n  for (let i = 0; i < analyzedItems.length; i++) {\n    if (arr[analyzedItems[i]] && arr[analyzedItems[i]].status !== \"sorted\") {\n      arr[analyzedItems[i]].status = \"analyzed\";\n    }\n  }\n  for (let i = 0; i < sortedItems.length; i++) {\n    if (arr[sortedItems[i]]) {\n      arr[sortedItems[i]].status = \"sorted\";\n    }\n  }\n  if (isSorted) {\n    arr.map(item => (item.status = \"sorted\"));\n  }\n  return arr;\n}\n\nfunction swapItems(arr, firstItemIndex, secondItemIndex) {\n  let tmp = arr[firstItemIndex];\n  arr[firstItemIndex] = arr[secondItemIndex];\n  arr[secondItemIndex] = tmp;\n  return arr;\n}\n\nfunction merge(left, right, sortedArray = []) {\n  while (left.length > 0 && right.length > 0) {\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (\n        algorithm.stateArr[i].index === left[0].index ||\n        algorithm.stateArr[i].index === right[0].index\n      ) {\n        setItemStatus(algorithm.stateArr, [], [i]);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (\n        algorithm.stateArr[i].index === left[0].index ||\n        algorithm.stateArr[i].index === right[0].index\n      ) {\n        setItemStatus(algorithm.stateArr, [i], []);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    algorithm.counter -= 1;\n    if (left[0].height < right[0].height) {\n      sortedArray = [...sortedArray, left.shift()];\n    } else {\n      sortedArray = [...sortedArray, right.shift()];\n    }\n  }\n  while (left.length > 0) {\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (algorithm.stateArr[i].index === left[0].index) {\n        setItemStatus(algorithm.stateArr, [], [i]);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (algorithm.stateArr[i].index === left[0].index) {\n        setItemStatus(algorithm.stateArr, [i], []);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    algorithm.counter -= 1;\n    sortedArray = [...sortedArray, left.shift()];\n  }\n  while (right.length > 0) {\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (algorithm.stateArr[i].index === right[0].index) {\n        setItemStatus(algorithm.stateArr, [], [i]);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    for (let i = 0; i < algorithm.stateArr.length; i++) {\n      if (algorithm.stateArr[i].index === right[0].index) {\n        setItemStatus(algorithm.stateArr, [i], []);\n      }\n    }\n    queueAnimation.call(this, algorithm.stateArr);\n    algorithm.counter -= 1;\n    sortedArray = [...sortedArray, right.shift()];\n  }\n  animateArraySorting.call(this, sortedArray);\n  if (algorithm.stateArr.length === sortedArray.length) {\n    setItemStatus(algorithm.stateArr, [], [], [], true);\n    queueAnimation.call(this, algorithm.stateArr, true);\n  }\n  return sortedArray;\n}\n\nfunction animateArraySorting(sortedArray) {\n  let minimum = findMinimumIndex(algorithm.stateArr, sortedArray);\n  for (let i = 0; i < sortedArray.length; i++) {\n    algorithm.stateArr[minimum + i] = JSON.parse(\n      JSON.stringify(sortedArray[i])\n    );\n    queueAnimation.call(this, algorithm.stateArr);\n  }\n}\n\nfunction findMinimumIndex(unsortedArr, sortedArray) {\n  for (let i = 0; i < unsortedArr.length; i++) {\n    for (let j = 0; j < sortedArray.length; j++) {\n      if (unsortedArr[i].index === sortedArray[j].index) {\n        return i;\n      }\n    }\n  }\n}\n\nfunction queueAnimation(updatedArray, isSorted) {\n  let arr = JSON.parse(JSON.stringify(updatedArray));\n  setTimeout(() => {\n    if (isSorted) {\n      this.setState({\n        arr: arr,\n        isSorted: true,\n        isSorting: false\n      });\n    } else {\n      this.setState({\n        arr: arr\n      });\n    }\n  }, algorithm.counter * this.state.speed);\n  algorithm.counter += 1;\n}\n\n//Adapted from https://www.guru99.com/quicksort-in-javascript.html\nfunction partition(arr, left, right) {\n  let pivot = arr[Math.floor((right + left) / 2)].height;\n  let i = left;\n  let j = right;\n  while (i <= j) {\n    while (arr[i].height < pivot) {\n      setItemStatus(algorithm.stateArr, [], [i]);\n      queueAnimation.call(this, algorithm.stateArr);\n      setItemStatus(algorithm.stateArr, [i], []);\n      queueAnimation.call(this, algorithm.stateArr);\n      algorithm.counter -= 1;\n      i++;\n    }\n    while (arr[j].height > pivot) {\n      setItemStatus(algorithm.stateArr, [], [j]);\n      queueAnimation.call(this, algorithm.stateArr);\n      setItemStatus(algorithm.stateArr, [j], []);\n      queueAnimation.call(this, algorithm.stateArr);\n      algorithm.counter -= 1;\n      j--;\n    }\n    if (i <= j) {\n      swapItems(arr, i, j);\n      setItemStatus(algorithm.stateArr, [], [i, j]);\n      swapItems(algorithm.stateArr, i, j);\n      queueAnimation.call(this, algorithm.stateArr);\n      setItemStatus(algorithm.stateArr, [i, j], []);\n      queueAnimation.call(this, algorithm.stateArr);\n      //algorithm.counter -= 1;\n      i++;\n      j--;\n    }\n  }\n  return i;\n}\n\nexport default algorithm;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport SimpleMenu from \"./Menu\";\nimport InputSlider from \"./Slider\";\nimport ItemBlock from \"./ItemBlock\";\nimport algorithm from \"./Algorithms\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arr: [],\n      algorithm: \"\",\n      speed: 30,\n      isSorted: false,\n      isSorting: false\n    };\n  }\n\n  componentDidMount() {\n    this.changeArrSize(30);\n  }\n\n  changeAlgorithm = algorithm => {\n    this.setState({ algorithm: algorithm });\n  };\n\n  changeArrSize = size => {\n    let arr = [];\n    for (let i = 0; i < size; i++) {\n      let randomHeight = calcRandomInIntervall(20, 400);\n      arr.push(new Item(randomHeight, \"default\", i));\n    }\n    this.setState({ arr: arr, isSorted: false });\n  };\n\n  handleClick = () => {\n    if (this.state.arr.length > 1) {\n      if (!this.state.isSorted && !this.state.isSorting) {\n        let arr = JSON.parse(JSON.stringify(this.state.arr));\n        switch (this.state.algorithm) {\n          case \"Bubble Sort\":\n            this.setState({ isSorting: true });\n            algorithm.bubbleSortWrapper.call(this, arr);\n            break;\n          case \"Selection Sort\":\n            this.setState({ isSorting: true });\n            algorithm.selectionSortWrapper.call(this, arr);\n            break;\n          case \"Insertion Sort\":\n            this.setState({ isSorting: true });\n            algorithm.insertionSortWrapper.call(this, arr);\n            break;\n          case \"Quick Sort\":\n            this.setState({ isSorting: true });\n            algorithm.quickSortWrapper.call(this, arr, 0, arr.length - 1);\n            break;\n          case \"Merge Sort\":\n            this.setState({ isSorting: true });\n            algorithm.mergeSortWrapper.call(this, arr);\n            break;\n          default:\n            break;\n        }\n      } else if (!this.state.isSorted && this.state.isSorting) {\n        //Note to myself: Hacky implementation. Normally refraing from use, because of termination of global setTimeouts.\n        let highestTimeoutId = setTimeout(\";\");\n        for (let i = 0; i < highestTimeoutId; i++) {\n          clearTimeout(i);\n        }\n        this.setState({ isSorted: true, isSorting: false });\n      } else {\n        let arr = JSON.parse(JSON.stringify(this.state.arr));\n        arr.sort((a, b) => a.index - b.index);\n        arr.map(item => (item.status = \"default\"));\n        this.setState({ arr: arr, isSorted: false });\n      }\n    }\n  };\n\n  render() {\n    let { arr, algorithm } = this.state;\n    const itemWidth = calcItemWidth(arr.length);\n    let itemBlocks = arr.map((item, index) => {\n      let blockColor = setColor(item.status);\n      return (\n        <ItemBlock\n          key={index}\n          itemWidth={itemWidth}\n          itemHeight={item.height}\n          blockColor={blockColor}\n        />\n      );\n    });\n    return (\n      <div>\n        <header\n          style={{\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <div style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}>\n            <SimpleMenu\n              changeAlgorithm={this.changeAlgorithm}\n              algorithm={algorithm}\n            />\n          </div>\n          <div style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}>\n            <InputSlider\n              disabled={this.state.isSorting}\n              changeArrSize={this.changeArrSize}\n            />\n          </div>\n          <div style={{ display: \"flex\", flex: 1, justifyContent: \"center\" }}>\n            <Button\n              startIcon={\n                this.state.isSorting\n                  ? (<Icon className=\"fas fa-stop\" style={{ fontSize: \"16px\" }} />)\n                  : this.state.isSorted\n                    ? (<Icon className=\"fas fa-undo\" style={{ fontSize: \"16px\" }} />)\n                    : (<Icon className=\"fas fa-sort-amount-up\" style={{ fontSize: \"16px\" }} />)\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleClick}\n              style={{ width: \"130px\" }}\n            >\n              {this.state.isSorting\n                ? \"STOP\"\n                : this.state.isSorted\n                  ? \"RESET\"\n                  : \"SORT\"}\n            </Button>\n          </div>\n        </header>\n        <div style={{ display: \"flex\" }}>{itemBlocks}</div>\n      </div>\n    );\n  }\n}\n\nclass Item {\n  constructor(height, status, index) {\n    this.height = height;\n    this.status = status;\n    this.index = index;\n  }\n}\n\nfunction calcRandomInIntervall(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction calcItemWidth(itemCount) {\n  return window.innerWidth / itemCount - 2;\n}\n\nfunction setColor(itemStatus) {\n  switch (itemStatus) {\n    case \"analyzed\":\n      return \"#F98334\";\n    case \"sorted\":\n      return \"#3ECF8E\";\n    default:\n      return \"#408AF8\";\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(< App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}